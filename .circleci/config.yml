# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Orbs are reusable packages of CircleCI configuration that you may share across projects, enabling you to create encapsulated, parameterized commands, jobs, and executors that can be used across multiple projects.
# See: https://circleci.com/docs/2.0/orb-intro/
orbs:
  ruby: circleci/ruby@2.0.0
  node: circleci/node@5.1.0

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  build:
    docker:
      - image: cimg/ruby:3.1.1-node
    executor: ruby/default
    steps:
      - checkout
      - ruby/install-deps
      - node/install-packages:
          pkg-manager: yarn

  test:
      parallelism: 3
      docker:
        - image: circleci/ruby:3.2.0-node
        - image: circleci/mysql:8.0
          environment:
            - MYSQL_USER: root
            - MYSQL_PASSWORD: appuser
            - MYSQL_DATABASE: myapp_test
      environment:
        BUNDLE_JOBS: '3'
        BUNDLE_RETRY: '3'
        PGHOST: 127.0.0.1
        PGPASSWORD: ''
        PGUSER: root
        RAILS_ENV: test
      steps:
        - checkout
        - ruby/install-deps
        - node/install-packages:
            pkg-manager: yarn
        - run:
            command: 'dockerize -wait tcp://localhost:5432 -timeout 1m'
            name: Wait for DB
        - run:
            command: 'bundle exec rails db:schema:load --trace'
            name: Database setup
        # run tests!
        - run:
            name: Run rspec
            command: bundle exec rspec

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  version: 2
  build_test_deploy: # This is the name of the workflow, feel free to change it to better match your workflow.
    # Inside the workflow, you define the jobs you want to run.
    jobs:
      - build
      - test:
          requires:
            - build
